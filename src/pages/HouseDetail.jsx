import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import '../style/HouseDetail.css';
import { MapContainer, TileLayer, Marker } from 'react-leaflet';
import 'leaflet/dist/leaflet.css';
import L from "leaflet";
import { Swiper, SwiperSlide } from 'swiper/react';
import 'swiper/css';
import 'swiper/css/navigation';
import { Navigation } from 'swiper/modules';
import { getHouseDetail, fetchImage, fetchTienIch, fetchTienNghi } from "../services/api"; // Import h√†m fetchTienIch

// T·∫°o icon FontAwesome cho marker
const houseIcon = L.divIcon({
    className: "custom-house-icon",
    html: '<i class="fas fa-home" style="font-size: 24px; color: red;"></i>',
    iconSize: [30, 30],
    iconAnchor: [15, 30],
});

const HouseDetail = () => {
    const { id } = useParams();
    const navigate = useNavigate();
    const [house, setHouse] = useState(null);
    const [Img, setImg] = useState(null);
    const [tienIch, setTienIch] = useState([]); // State ƒë·ªÉ l∆∞u tr·ªØ th√¥ng tin ti·ªán √≠ch
    const [tienNghiList, setTienNghiList] = useState([]);
    // L·∫•y danh s√°ch n·ªôi th·∫•t t·ª´ API
    useEffect(() => {
        const fetchTienNghiList = async () => {
            try {
                const response = await fetchTienNghi();
                setTienNghiList(response.data.tenTienNghi);
            } catch (error) {
                console.error("L·ªói khi l·∫•y danh s√°ch n·ªôi th·∫•t:", error);
            }
        };

        fetchTienNghiList();
    }, []);

    // // H√†m g·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin ti·ªán √≠ch v√† kho·∫£ng c√°ch t·ªõi tr·ªç
    // const fetchTienIchData = async () => {
    //     try {
    //         const data = await fetchTienIch(houseId);
    //         setTienIch(data);
    //     } catch (error) {
    //         console.error("L·ªói khi l·∫•y th√¥ng tin ti·ªán √≠ch:", error);
    //     }
    // };

    // X·ª≠ l√Ω l·∫•y d·ªØ li·ªáu h√¨nh ·∫£nh
    // useEffect(() => {
    //     const fetchHouseImg = async () => {
    //         try {
    //             const imgUrl = await fetchImage(id);
    //             console.log("·∫¢nh t·∫£i v·ªÅ:", imgUrl); // Ki·ªÉm tra d·ªØ li·ªáu ·∫£nh
    //             setImg(imgUrl);
    //         } catch (error) {
    //             console.error("L·ªói khi l·∫•y ·∫£nh:", error);
    //         }
    //     };
    //     fetchHouseImg();
    // }, [id]);

    // X·ª≠ l√Ω l·∫•y d·ªØ li·ªáu nh√† tr·ªç
    useEffect(() => {
        const fetchHouse = async () => {
            try {
                const data1 = await getHouseDetail(id);
                setHouse(data1.data);
                console.log("üè† D·ªØ li·ªáu nh√† tr·ªç:", data1.data.TienNghis);

                setTienNghiList([...data1.data.TienNghis]); // C·∫≠p nh·∫≠t state
                console.log("üè† D·ªØ li·ªáu nh√† tr·ªç:", data1.data);
            } catch (error) {
                console.error("L·ªói khi l·∫•y d·ªØ li·ªáu nh√† tr·ªç:", error);
            }
        };

        fetchHouse();
    }, [id]);



    if (!house) return <h2>ƒêang t·∫£i d·ªØ li·ªáu...</h2>;

    // Chuy·ªÉn t·ªça ƒë·ªô t·ª´ toaDoX v√† toaDoY th√†nh m·∫£ng [lat, lng]
    const coordinates = [parseFloat(house.lat), parseFloat(house.lon)];

    // L·ªçc ra danh s√°ch n·ªôi th·∫•t 
    const tienNghiArray = Array.isArray(tienNghiList) ? tienNghiList : [];
    console.log("Danh s√°ch n·ªôi th·∫•t:", tienNghiArray);

    return (
        <div className="house-detail-container">
            <div className="header1">
                <h2>Th√¥ng tin nh√† tr·ªç</h2>
                <button onClick={() => navigate(-1)}>‚úñ</button>
            </div>

            {/* Hi·ªÉn th·ªã h√¨nh ·∫£nh */}
            {Img ? (
                <img src={Img} alt="H√¨nh ·∫£nh nh√† tr·ªç" className="image-gallery" />) : (<p style={{ color: "red" }}>Kh√¥ng c√≥ h√¨nh ·∫£nh</p>)}

            <div className="content-container">
                <div className="house-info">
                    <p><b>T√™n nh√† tr·ªç:</b> {house.tenNhaTro}</p>
                    <p><b>ƒê·ªãa ch·ªâ:</b> {house.diaChi}</p>
                    <p><b>Ch·ªß nh√†:</b> {house.tenChuNha}</p>
                    <p><b>S·ªë ƒëi·ªán tho·∫°i:</b> {house.sdt}</p>
                    <p><b>K√≠ch th∆∞·ªõc:</b> {house.kichThuocMin} - {house.kichThuocMax} m¬≤</p>
                    <p><b>S·ªë l∆∞·ª£ng ph√≤ng tr·ªç:</b> {house.soPhong}</p>
                    <p><b>Gi√° thu√™:</b> {house.giaMin ? house.giaMin.toLocaleString() : "N/A"} - {house.giaMax ? house.giaMax.toLocaleString() : "N/A"} VND/th√°ng</p>
                    <p><b>Gi√° ƒëi·ªán:</b> {house.tienDien.toLocaleString()} VND/kWh</p>
                    <p><b>Gi√° n∆∞·ªõc:</b> {house.tienNuoc.toLocaleString()} VND/m¬≥</p>

                    <p><b>N·ªôi th·∫•t:</b></p>
                    <ul className="noi-that-list">
                        {tienNghiList.map((item) => (
                            <li key={item.id}>
                                {tienNghiArray.some(nt => nt.id === item.id) ? "‚úîÔ∏è" : "‚ùå"} {item.tenTienNghi}
                            </li>
                        ))}
                    </ul>
                    <p><b>Th√¥ng tin th√™m:</b></p>
                    <p><b>Cho nu√¥i th√∫ c∆∞ng:</b> {house.thuCung ? "‚úîÔ∏è C√≥" : "‚ùå Kh√¥ng"}</p>
                    <p><b>Chung ch·ªß:</b> {house.chungChu ? "‚úîÔ∏è C√≥" : "‚ùå Kh√¥ng"}</p>
                    <p><b>Nh√† v·ªá sinh ri√™ng:</b> {house.chungChu ? "‚úîÔ∏è C√≥" : "‚ùå Kh√¥ng"}</p>
                    <p><b>ƒê√°nh gi√°:</b> ‚≠ê {house.danhGia} / 5 ({house.soNguoiDanhGia} ƒë√°nh gi√°)</p>
                    {/* <p><b>N·ªôi quy:</b> {house.noiQuy}</p> */}
                    <p><b>Ghi ch√∫:</b> {house.ghiChu}</p>

                    {/* <p><b>Ti·ªán √≠ch:</b></p>
                    <ul className="tien-ich-list">
                        {tienIch.map((item, index) => (
                            <li key={index}>
                                {item.tenTienIch} - {item.khoangCach}m
                            </li>
                        ))}
                    </ul> */}
                </div>

                {/* B·∫£n ƒë·ªì */}
                <div className="map-container">
                    <MapContainer center={coordinates} zoom={16} scrollWheelZoom={false} style={{ height: "100%", width: "100%" }}>
                        <TileLayer url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png" />
                        <Marker position={coordinates} icon={houseIcon} />
                    </MapContainer>
                </div>
            </div>
        </div>
    );
};

export default HouseDetail;